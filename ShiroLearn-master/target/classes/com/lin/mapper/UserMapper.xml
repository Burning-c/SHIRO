<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lin.dao.UserDao">
	<resultMap id="BaseResultMap" type="com.lin.domain.User">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="age" property="age" jdbcType="INTEGER" />
		<result column="birthday" property="birthday" jdbcType="DATE" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<collection property="roleSet" column="roleid" ofType="com.lin.domain.Role">
			<id property="id" column="id" />
			<result property="name" column="name" />
			<collection property="permissionSet" column="permissionid"
				ofType="com.lin.domain.Permission">
				<id property="id" column="id" />
				<result property="name" column="name" />
			</collection>
		</collection>
	</resultMap>

	<resultMap id="BasePermissionMap" type="com.lin.domain.Permission">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="permission" property="permission" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="Base_Column_List">
		id, name, age, birthday, password
	</sql>


	<sql id="select-base-role">
		SELECT p.*
		FROM t_permission p
		JOIN t_permission_role
		rm ON
		rm.permission_id = p.id
		JOIN t_role r ON r.id = rm.role_id
		JOIN
		t_role_user ur ON ur.role_id = r.id
		JOIN t_user u ON u.id = ur.user_id
	</sql>

	<!-- 查询所有用户 -->
	<select id="selectAll" resultMap="BaseResultMap" parameterType="com.lin.domain.User">
		select
		<include refid="Base_Column_List" />
		from t_user
	</select>

	<select id="selectPrimaryById" resultMap="BaseResultMap"
		parameterType="int">
		select
		<include refid="Base_Column_List" />
		from t_user
		where id = #{id,jdbcType=INTEGER}
	</select>

	<select id="findUserByLoginName" resultMap="BaseResultMap"
		parameterType="string">
		select
		<include refid="Base_Column_List" />
		from t_user
		where name = #{username,jdbcType=VARCHAR}
	</select>

	<select id="findUserPermissionByName" resultMap="BasePermissionMap"
		parameterType="string">
		<include refid="select-base-role" />
		AND
		u.name = #{username}
	</select>


	<insert id="insert" parameterType="com.lin.domain.User">
		insert into t_user (id, name,
		age,
		birthday, password)
		values (#{id,jdbcType=INTEGER},
		#{name,jdbcType=VARCHAR},
		#{age,jdbcType=INTEGER},
		#{birthday,jdbcType=DATE}, #{password,jdbcType=VARCHAR})
	</insert>

	<select id="countUserRoleById" parameterType="int" resultType="java.lang.Integer">
		select count(*) from t_role_user 
		where user_id= #{userId}
	</select>



	<insert id="insertRole">
		insert into t_role_user (user_id, role_id)
		values
		(#{userId,jdbcType=INTEGER},
		#{roleId,jdbcType=INTEGER})
	</insert>

	<update id="updateRole">
		update t_role_user
		<set>
			<if test="roleId != null">
				role_id = #{roleId,jdbcType=VARCHAR}
			</if>
		</set>
		where user_id = #{userId,jdbcType=INTEGER}
	</update>


	<delete id="delete" parameterType="int">
		delete from t_user
		where id =
		#{id,jdbcType=INTEGER}
	</delete>

	<update id="update" parameterType="com.lin.domain.User">
		update t_user
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="age != null">
				age = #{age,jdbcType=INTEGER},
			</if>
			<if test="birthday != null">
				birthday = #{birthday,jdbcType=DATE},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<select id="selectCount" resultType="int">
		select count(*) from t_user
	</select>

	<select id="limit" resultType="com.lin.domain.User">
		select * from t_user limit
		#{startIndex},#{pageSize}
	</select>


</mapper>